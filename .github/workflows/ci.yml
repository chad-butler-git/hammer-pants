name: CI Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'

permissions:
  contents: read
  packages: write

jobs:
  install-and-test:
    name: Install & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [grocery-api, grocery-web, grocery-shared]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ${{ matrix.repo }}/package-lock.json
      
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ matrix.repo }}
      
      - name: Run linting
        run: npm run lint
        working-directory: ${{ matrix.repo }}
      
      - name: Run tests
        run: npm test
        working-directory: ${{ matrix.repo }}
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.repo }}
          path: ${{ matrix.repo }}/coverage/
          retention-days: 7

  hadolint:
    name: Dockerfile Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Hadolint on grocery-api Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: grocery-api/Dockerfile
          failure-threshold: error
      
      - name: Run Hadolint on grocery-web Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: grocery-web/Dockerfile
          failure-threshold: error

  sca-scan:
    name: Software Composition Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install osv-scanner
        run: |
          curl -sSfL https://raw.githubusercontent.com/google/osv-scanner/main/install.sh | sh -s -- -b .
          chmod +x ./osv-scanner
      
      - name: Run vulnerability scan
        run: |
          ./osv-scanner --recursive .
        continue-on-error: true  # Non-blocking as specified in requirements
      
      - name: Verify vulnerabilities
        run: |
          cd grocery-infra
          node scripts/verifyVulns.js

  docker-build:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [install-and-test, hadolint]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push grocery-api image
        uses: docker/build-push-action@v5
        with:
          context: ./grocery-api
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/groceries-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push grocery-web image
        uses: docker/build-push-action@v5
        with:
          context: ./grocery-web
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/groceries-web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trivy-scan:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Scan grocery-api image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/groceries-api:${{ github.sha }}
          format: 'table'
          exit-code: '0'  # Allow failure (continue-on-error)
          severity: 'CRITICAL,HIGH'
      
      - name: Scan grocery-web image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/groceries-web:${{ github.sha }}
          format: 'table'
          exit-code: '0'  # Allow failure (continue-on-error)
          severity: 'CRITICAL,HIGH'

  e2e-playwright:
    name: E2E Playwright Tests
    runs-on: ubuntu-latest
    needs: [install-and-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: grocery-infra/package-lock.json
      
      - name: Install Playwright
        run: |
          cd grocery-infra/grocery-infra/e2e
          npm init -y
          npm install @playwright/test
          npx playwright install --with-deps chromium
      
      - name: Run E2E tests on PR
        if: github.event_name == 'pull_request'
        run: |
          # Start containers locally
          cd grocery-infra
          docker-compose up -d
          
          # Wait for services to be ready
          sleep 10
          
          # Run Playwright tests
          cd grocery-infra/e2e
          npx playwright test
      
      - name: Run E2E tests on main
        if: github.ref == 'refs/heads/main'
        run: |
          # Use the built images from GHCR
          cd grocery-infra
          
          # Modify docker-compose to use built images
          sed -i "s|build:|image: ghcr.io/${{ github.repository_owner }}/groceries-api:${{ github.sha }}|g" docker-compose.yml
          sed -i "/context:/d" docker-compose.yml
          sed -i "/dockerfile:/d" docker-compose.yml
          
          sed -i "s|build:|image: ghcr.io/${{ github.repository_owner }}/groceries-web:${{ github.sha }}|g" docker-compose.yml
          
          # Start containers
          docker-compose up -d
          
          # Wait for services to be ready
          sleep 10
          
          # Run Playwright tests
          cd grocery-infra/e2e
          npx playwright test
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: grocery-infra/grocery-infra/e2e/playwright-report/
          retention-days: 7

  update-badge:
    name: Update Status Badge
    runs-on: ubuntu-latest
    needs: [install-and-test, hadolint, sca-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check if badge exists
        id: check_badge
        run: |
          if grep -q "!\[CI\]" README.md; then
            echo "Badge already exists"
            echo "badge_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Badge does not exist"
            echo "badge_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Add badge if it doesn't exist
        if: steps.check_badge.outputs.badge_exists == 'false'
        run: |
          # Get line number of the first empty line after the title
          LINE_NUM=$(grep -n "^$" README.md | head -n 1 | cut -d: -f1)
          
          # Insert badge after that line
          sed -i "${LINE_NUM}a\\
          ![CI](https://github.com/${{ github.repository }}/actions/workflows/ci.yml/badge.svg)" README.md
          
          # Commit and push the change
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Add CI status badge [skip ci]"
          git push